@startuml

class Personaje {
    - vidas : int
    - saltando : bool
    - enPlataforma : bool
    - velocidadSalto : float
    - gravedad : float
    - alturaSalto : float
    - sprite 
    - plataformas 

    + MoverIzquierda()
    + MoverDerecha()
    + Saltar()
    + ActualizarGravedad()
    + ActualizarAnimacion()
    + Dibujar()
    + GetVidas() : int
    + PerderVida()
    + Restablecer()
    + GetBounds() : FloatRect
    + Saltar(Enemigo&)
    + DetenerMovimiento()
    + PerderTodasLasVidas()
    + DibujarPlataformas()
    + VerificarColisionConPlataforma()
    + AsignarMusica()
}

class Enemigo {
    - enemigoSprite 
    - estaEliminado : bool

    + Mover()
    + InteractuarConJugador(Personaje&)
    + VerificarColisionConPersonaje(Personaje&)
    + Eliminar()
    + Dibujar()
    + GetBounds() : float
    + EstaActivo() : bool
}

class Jefe {
    - jefeSprite 
    - banderaSprite

    + Mover()
    + Saltar()
    + VerificarColisionConPersonaje(Personaje&)
    + VerificarColisionConBandera(Personaje&) : bool
    + MostrarMensajeFinal()
    + Draw()
}

class Escenario {
    - plataformas(): void 
    - monedas 
    - fondoSprite
    - puntaje : int
    - enemigosMuertos : int

    + Dibujar()
    + AgregarPlataforma()
    + GenerarMoneda()
    + ActualizarMonedas()
    + IncrementarPuntaje()
    + IncrementarEnemigosMuertos()
    + GetMonedasRecogidas() : int
    + GetEnemigosMuertos() : int
    + GetTiempoRestante() : int
    + VerificarColisionConPlataformas(Personaje&)
    + Actualizar()
}

class HUD {
    - textoVidas : Text
    - textoMonedas : Text
    - textoEnemigos : Text
    - textoTiempoRestante : Text

    + Actualizar()
    + Dibujar()
}

class Puntaje {
    + GuardarPuntaje(int)
    + ObtenerPuntajeMaximo() : int
}

Jefe --|> Enemigo
Personaje "1" *-- "*" Enemigo 
Personaje "1" *-- "1" Jefe 
Escenario "1" --o "1" Personaje 
Escenario "1" *-- "*" HUD 
Escenario "1" o-- "1" Puntaje
HUD "1" o-- "1" Puntaje
Enemigo "1" o-- "1" Personaje
Jefe "1" o-- "1" Personaje

@enduml