@startuml

class Personaje {
    - vidas : int
    - saltando : bool
    - enPlataforma : bool
    - velocidadSalto : float
    - gravedad : float
    - alturaSalto : float
    - sprite 
    - plataformas 

    + MoverIzquierda(): void
    + MoverDerecha(): void
    + Saltar(): void
    + ActualizarGravedad(): void
    + ActualizarAnimacion(): void
    + Dibujar(): void
    + ObtenerVidas() : int
    + PerderVida(): void
    + Restablecer(): void
    + ObtenerLimites() : float    
    + DetenerMovimiento(): void
    + PerderTodasLasVidas(): void
    + DibujarPlataformas(): void 
    + VerificarColisionConPlataforma(): void
    + AsignarMusica(): void
}

class Enemigo {
    - enemigoSprite 
    - estaEliminado : bool

    + Mover()
    + InteractuarConJugador(): void
    + VerificarColisionConPersonaje(): void
    + Eliminar(): void
    + Dibujar(): void
    + ObtenerLimites() : float
    + ObtenerEstaActivo() : bool
}

class Jefe {
    - jefeSprite 
    - banderaSprite

    + Mover(): void
    + Saltar(): void
    + VerificarColisionConPersonaje(): void
    + VerificarColisionConBandera() : bool
    + MostrarMensajeFinal()
    + Dibujar()
}

class Escenario {     
    - monedas 
    - fondoSprite
    - puntaje : int    

    + Dibujar(): void
    + AgregarPlataforma(): void
    + GenerarMoneda(): void
    + ActualizarMonedas(): void
    + IncrementarPuntaje(): void   
    + ObtenerMonedasRecogidas() : int
    + ObtenerEnemigosMuertos() : int
    + ObtenerTiempoRestante() : int
    + VerificarColisionConPlataformas(): void
    + Actualizar(): void
}

class Hud {
    - textoVidas : Text
    - textoMonedas : Text    
    - textoTiempoRestante : Text

    + Actualizar()
    + Dibujar()
}

class Puntaje {
    + GuardarPuntaje(): int
    + ObtenerPuntajeMaximo() : int
}

Personaje "1" o-- "*" Enemigo 
Personaje "1" *-- "1" Jefe 
Escenario "1" --o "1" Personaje 
Escenario "1" *-- "*" Hud 
Escenario "1" o-- "1" Puntaje
Hud "1" o-- "1" Puntaje
Enemigo "1" o-- "1" Personaje
Jefe "1" o-- "1" Personaje

@enduml